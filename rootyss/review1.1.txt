Добрый день. Владимир! Вам удалось справиться с задачей, тесты успешно пройдены и в игры уже можно даже поиграть.
На мой взгляд для первой попытки это очень крутой результат!

Сейчас наступает не менее важная часть разработки - рефакторинг кода.
Далее я отправлю вам список замечаний. Ваша задача внимательно изучить их и внести исправления в свой код

_________________

Начнем с косметики, вам может показаться что это совсем не важные замечания, но это не так. 
Обычно над проектом вы работаете не один, и не следуя некоторым правилам оформления проекта 
вы можете вводить в заблуждение ваших коллег

_________________

Директория src должна содержать исходный код программы,
Игры также являются исходным кодом https://github.com/rootyss/frontend-project-lvl1/tree/main/games

_________________

Зависимости
https://github.com/rootyss/frontend-project-lvl1/blob/main/package.json#L16-L19
Следующие зависимости являются dev зависимости, необходимыми только при разработке
их нужно перенести в devDependencies в файле package.json
Подробнее можно прочесть здесь https://habr.com/en/post/243335/

_________________

Следующие пакеты jest, необходимы для запуска тестов
https://github.com/rootyss/frontend-project-lvl1/blob/main/package.json#L20-L21
https://github.com/rootyss/frontend-project-lvl1/blob/main/package.json#L15
Тестов в проекте нет, соответственно и зависимости лишние, поэтому данные зависимости не нужны.
Удалите их можно используя команду npm uninstall

_________________

Здесь прописан алиас на запуск тестового фреймворка mocha, которого нет в зависимостях
https://github.com/rootyss/frontend-project-lvl1/blob/main/package.json#L26
При отсутствии тестов, этот алиас прописывать не нужно вовсе или хотя бы оставить сгенерированную заглушку с помощью npm
"scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
},
_________________

https://github.com/rootyss/frontend-project-lvl1/blob/main/README.md
На странице должны отображаться сами аскинемы, а не ссылки на них. 
Так проект будет выглядеть более привлекательно для потенциальных работодателей,
которые будут просматривать ваш репозиторий. 
Просмотрите как можно встроить на страницу аскинему https://asciinema.org/docs/embedding

_________________

Дальше уже рекомендации относительно кода

https://github.com/rootyss/frontend-project-lvl1/blob/main/games/even.js#L10-L19
При запуске любой игры всегда должно происходить одно и то же действие
- сравнение ответа пользователя с правильным ответом
Это действие является ответственностью движка, а сама игра должна предоставлять
движку данные для выполнения этого действия
Так как мы знаем что логика игры у нас везде одинаковая, мы можем вынести эту логику в движок
- это позволить не описывать нам логику каждый раз, что сократит код игры, упростит его понимание
и предотвратит возможность создания ошибок
_________________

Операции ввода вывода
https://github.com/rootyss/frontend-project-lvl1/blob/main/games/even.js#L12
https://github.com/rootyss/frontend-project-lvl1/blob/main/games/even.js#L15
https://github.com/rootyss/frontend-project-lvl1/blob/main/games/even.js#L18

Игра не должна знать ничего о внешней среде где она запускается, такие функции как console.log, readlineSync работают с ней
Представьте что завтра у нас появится новая задача о том что игру необходимо запускать также в браузере, 
где нет возможности вызвать readlineSync и хоть у нас останется работать console.log - не все пользователи игры будут 
знать как увидеть вывод этой функции в браузере
сколько кода нужно будет переписать для того чтобы реализовать эту задачу?
Постарайтесь сделать так чтобы движок занимался игрой, а сама игра, предоставляла ему данные
_________________

https://github.com/rootyss/frontend-project-lvl1/blob/main/games/even.js#L7
Здесь есть проблемы с разделением уровней абстракции, ознакомьтесь пожалуйста с этой статей
https://ru.hexlet.io/blog/posts/sovershennyy-kod-proektirovanie-funktsiy
в ней как раз разбирается этот пример
_________________

Итак подытожим к чему нам нужно привести игру
Исполняемый файл -> Игра -> Движок
Игра ничего не знает о среде, и не занимается логикой, только предоставляет данные для игры
Движок используя данные игры, через взаимодействие со средой, позволяет запускать игру и следит за исполнением логики в игре
_________________

Все вопросы, которые возникают, задавайте мне в слаке телеграмм @strelov1. Там мы их сможем оперативно решить.