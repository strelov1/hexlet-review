Николай, день добрый!

Отлично отрефакторили проект, логика значительно упростилась и кода стало ещё меньше, что очень хорошо. Продолжим работу над вашим проектом.

---


https://github.com/enareel/frontend-project-lvl1/blob/b8cf0553fca6b210ad7d0f53c526fb7ba3750067/README.md

README.md - Это Супер! Просто эталонное описание!

---



https://github.com/enareel/frontend-project-lvl1/blob/b8cf0553fca6b210ad7d0f53c526fb7ba3750067/bin/brain-games.js#L8-L10

В bin файла должен быть только запуск, все остальное можно было вынести в cli.js

---


https://github.com/enareel/frontend-project-lvl1/blob/b8cf0553fca6b210ad7d0f53c526fb7ba3750067/src/engine.js#L26

Имя функции должно быть глаголом `gameFunc` - не отражает суть процесса, который происходит при ее вызове


---

https://github.com/enareel/frontend-project-lvl1/blob/b8cf0553fca6b210ad7d0f53c526fb7ba3750067/src/engine.js#L14

Есть ли смысл выносить эти операции в отдельную функцию? Сделало ли это код проще для чтения?
Функции должны скрывать за собой какую-либо абстракцию, что скрываются здесь не понятно
Можно было бы изолировать вызовы `readlineSync` через свою абстракцию, чтобы в будущем была возможность подменить ее например на браузерный `prompt`, но тогда и цель и название функции должно быть другим


---

https://github.com/enareel/frontend-project-lvl1/blob/b8cf0553fca6b210ad7d0f53c526fb7ba3750067/src/engine.js#L33

https://github.com/enareel/frontend-project-lvl1/blob/b8cf0553fca6b210ad7d0f53c526fb7ba3750067/src/engine.js#L39

У нас здесь происходит 2 вызова игры, при этом при каждом вызове формирует вопросы что является побочным эффектом, который может сильно повлияет на игры (к примеру если бы мы брали вопросы из бд при этом удалил их после извлечения, у нас просто бы часть запросов никогда не попала пользоватею)
Чтобы избежать такого поведения, нужно описание игры передать отдельным аргументом, и не формировать в функции с игрой, так как описания у нас не меняется при вызове каждого вопроса

---

https://github.com/enareel/frontend-project-lvl1/blob/b8cf0553fca6b210ad7d0f53c526fb7ba3750067/games/brain-progression.js#L20-L35

Функцию генерации прогрессии можно было сделать [чистой](https://ru.wikipedia.org/wiki/%D0%A7%D0%B8%D1%81%D1%82%D0%BE%D1%82%D0%B0_%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%B8). а ее все параметры передать в качестве агрументов из основной функции игры 


---

https://github.com/enareel/frontend-project-lvl1/blob/b8cf0553fca6b210ad7d0f53c526fb7ba3750067/games/brain-progression.js#L43-L47

Генерацию вопроса и выражения здесь можно разделить на чистые функции
1. Генерируем прогрессию
2. Получаем рандомные элемент - является правильным ответом
3. Формируем выражения для пользователя - скрываем из прогрессии полученный на втором шаге элемент